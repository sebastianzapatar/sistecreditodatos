name: Sync to Databricks Repo

on:
  push:
    branches: [ main ]

jobs:
  sync-databricks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Find Databricks Repo ID
      id: find_repo
      run: |
        echo "🔍 Buscando repositorio sistecreditodatos..."
        
        RESPONSE=$(curl -s -X GET \
          "${{ secrets.DATABRICKS_HOST }}/api/2.0/repos" \
          -H "Authorization: Bearer ${{ secrets.DATABRICKS_TOKEN }}" \
          -H "Content-Type: application/json")
        
        echo "📋 Repositorios encontrados:"
        echo "$RESPONSE" | jq -r '.repos[] | "\(.id): \(.path)"'
        
        # Buscar repo que contenga "sistecreditodatos" (nombre correcto)
        REPO_ID=$(echo "$RESPONSE" | jq -r '.repos[] | select(.path | contains("sistecreditodatos")) | .id')
        
        if [ "$REPO_ID" = "null" ] || [ -z "$REPO_ID" ]; then
          echo "❌ No se encontró repositorio sistecreditodatos"
          echo "💡 Verificando nombres disponibles..."
          echo "$RESPONSE" | jq -r '.repos[] | .path'
          exit 1
        fi
        
        echo "✅ Repo ID encontrado: $REPO_ID"
        echo "repo_id=$REPO_ID" >> $GITHUB_OUTPUT

    - name: Update Databricks Repo
      run: |
        echo "🔄 Actualizando repositorio sistecreditodatos..."
        echo "📍 Repo ID: ${{ steps.find_repo.outputs.repo_id }}"
        echo "🌐 Host: ${{ secrets.DATABRICKS_HOST }}"
        
        curl -X PATCH \
          "${{ secrets.DATABRICKS_HOST }}/api/2.0/repos/${{ steps.find_repo.outputs.repo_id }}" \
          -H "Authorization: Bearer ${{ secrets.DATABRICKS_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"branch": "main"}' \
          --fail-with-body \
          -v
        
        echo "✅ Repositorio sistecreditodatos sincronizado exitosamente!"
